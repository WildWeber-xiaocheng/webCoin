// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: register.proto

package ucclient

import (
	"context"
	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
	"grpc-common/ucenter/types/asset"
)

type (
	AssetReq         = asset.AssetReq
	MemberWallet     = asset.MemberWallet
	MemberWalletList = asset.MemberWalletList
	AssetResp        = asset.AssetResp

	Asset interface {
		FindWalletBySymbol(ctx context.Context, in *AssetReq, opts ...grpc.CallOption) (*MemberWallet, error)
		FindWallet(ctx context.Context, in *AssetReq, opts ...grpc.CallOption) (*MemberWalletList, error)
		ResetAddress(ctx context.Context, in *AssetReq, opts ...grpc.CallOption) (*AssetResp, error)
	}

	defaultAsset struct {
		cli zrpc.Client
	}
)

func (m *defaultAsset) ResetAddress(ctx context.Context, in *AssetReq, opts ...grpc.CallOption) (*AssetResp, error) {
	client := asset.NewAssetClient(m.cli.Conn())
	return client.ResetAddress(ctx, in, opts...)
}

func (m *defaultAsset) FindWalletBySymbol(ctx context.Context, in *AssetReq, opts ...grpc.CallOption) (*MemberWallet, error) {
	client := asset.NewAssetClient(m.cli.Conn())
	return client.FindWalletBySymbol(ctx, in, opts...)
}

func (m *defaultAsset) FindWallet(ctx context.Context, in *AssetReq, opts ...grpc.CallOption) (*MemberWalletList, error) {
	client := asset.NewAssetClient(m.cli.Conn())
	return client.FindWallet(ctx, in, opts...)
}

func NewAsset(cli zrpc.Client) Asset {
	return &defaultAsset{
		cli: cli,
	}
}
